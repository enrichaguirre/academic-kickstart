ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = factor(Category))) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.7),
position = position_stack(vjust = 0.7)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Category",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = factor(Category))) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.7),
position = position_stack(vjust = 0.7)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Category",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = factor(Category))) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Category",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = factor(Category))) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Rango de Publicaciones",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = factor(Category))) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
intervals_inmo$value = c("1 a 22","23 a 69", "70 a 141","142 a 276","276 a 419")
pie_chart_df_ex <- data.frame(Category = intervals_inmo$value, "freq" = intervals_inmo$Proporcion)
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = factor(Category))) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
pie_chart_df_ex <- data.frame(Category = intervals_inmo$value, "freq" = factor(intervals_inmo$Proporcion, ordered = T))
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = factor(Category))) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
pie_chart_df_ex <- data.frame(Category = factor(intervals_inmo$value, ordered = T), "freq" = intervals_inmo$Proporcion)
pie_chart_df_ex$freq = factor
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = factor(Category))) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
pie_chart_df_ex
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = factor(Category, ordered = T))) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
pie_chart_df_ex <- data.frame(Category = factor(intervals_inmo$value, ordered = T), "freq" = intervals_inmo$Proporcion)
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = Category)) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
pie_chart_df_ex <- data.frame(Category = factor(intervals_inmo$value, ordered = T,levels = c("1 a 22","23 a 69", "70 a 141","142 a 276","276 a 419")), "freq" = intervals_inmo$Proporcion)
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = Category)) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Pie Chart of Blue Chip Makeup") +
coord_polar("y")
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = Category)) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Publicaciones por Inmobiliaria") +
coord_polar("y")
knitr::opts_chunk$set(echo = TRUE)
source('informe_data.R')
source('informe_data.R')
source('informe_data.R')
bajaron_table = read_csv('bajaron_table.csv')
kable(bajaron_table, caption = "Bajaron de Precio")
#kable(bajaron_table, caption = "Bajaron de Precio")
source('informe_data.R')
bajaron_mardel_tds_c = bajaron_mardel_tds %>% group_by(Tipo) %>%
summarise(
Cantidad = n(),
Precio_M2 = mean(p.x.m2, na.rm = T),
Tamaño = mean(Metros, na.rm = T),
Precio = mean(Prices, na.rm = T),
Bajó = mean(Bajo, na.rm = T)
) %>% arrange(-Cantidad) %>% head(10)
setwd("/media/lucariel/Cosas/Proyectos/zonaprop/mardel informe")
source('pre-proc.R')
mardel_oct = read_csv('octubre_mardel.csv')
mardel_nov = read_csv('mardel_limpio.csv')
mardel_dec = read_csv('mardel_dec_limpio.csv')
todos_bajaron = read_csv("tods_bajaron_data.csv")
##### MAPA ####
geodataset = read_csv('mardel_geo.csv')
mardel_summary = function(mardel){
mardel %>% group_by(Tipo) %>%
summarise(
Cantidad = n(),
Precio_M2 = mean(p.x.m2, na.rm = T),
Tamaño = mean(Metros, na.rm = T),
Precio = mean(Prices, na.rm = T)
) %>% arrange(-Cantidad) %>% head(10)
}
mardel_summary_median = function(mardel){
mardel %>% group_by(Tipo) %>%
summarise(
Cantidad = n(),
Precio_M2 = median(p.x.m2, na.rm = T),
Tamaño = median(Metros, na.rm = T),
Precio = median(Prices, na.rm = T)
) %>% arrange(-Cantidad) %>% head(10)
}
summ_oct_median = mardel_summary_median(mardel_oct)
summ_nov_median = mardel_summary_median(mardel_nov)
summ_dec_median = mardel_summary_median(mardel_dec)
summ_oct = mardel_oct %>% mutate(
Tipo = case_when(
Tipo == 'Departamento' ~ 'Departamento',
Tipo =='Casa' ~'Casa',
Tipo == 'PH'~'PH',
T~'Otros'
)
) %>% mardel_summary()
summ_nov = mardel_nov %>% mutate(
Tipo = case_when(
Tipo == 'Departamento' ~ 'Departamento',
Tipo =='Casa' ~'Casa',
Tipo == 'PH'~'PH',
T~'Otros'
)
) %>% mardel_summary()
summ_dec = mardel_dec %>%mutate(
Tipo = case_when(
Tipo == 'Departamento' ~ 'Departamento',
Tipo =='Casa' ~'Casa',
Tipo == 'PH'~'PH',
T~'Otros'
)
) %>% mardel_summary()
mardel_dec['Mes'] = ymd("2019-12-01")
mardel_nov['Mes'] = ymd("2019-11-01")
mardel_oct['Mes'] = ymd("2019-10-01")
library(lubridate)
mardel_dec['Mes'] = ymd("2019-12-01")
mardel_nov['Mes'] = ymd("2019-11-01")
mardel_oct['Mes'] = ymd("2019-10-01")
trimestr =rbind(mardel_oct, mardel_nov %>%
dplyr::select(colnames(mardel_oct)),mardel_dec %>%
dplyr::select(colnames(mardel_oct))) %>% distinct(id, .keep_all = T)
trimestr_df = trimestr%>% group_by(Mes)%>% filter(p.x.m2 < quantile(p.x.m2, 0.95, na.rm = T)) %>%
ungroup() %>%group_by(Mes) %>% summarise(
media = median(p.x.m2, na.rm = T),
perc25 = quantile(p.x.m2, 0.25, na.rm = T),
perc75 = quantile(p.x.m2, 0.75, na.rm = T)
)
summ_trimestr = mardel_summary(trimestr)
summ_trimestr$Cantidad[1]/sum(summ_trimestr$Cantidad)
summ_trimestr$Cantidad[2]/sum(summ_trimestr$Cantidad)
dates <- c("02/92")
summ_dec['Mes'] = ymd("2019-12-01")
summ_nov['Mes'] = ymd("2019-11-01")
summ_oct['Mes'] = ymd("2019-10-01")
summ_all = rbind(summ_oct,summ_nov,summ_dec)
library(scales)
summ_all %>% filter(Cantidad>500) %>% ggplot(aes(x = Mes, y = Precio))+
geom_line(aes(color = Tipo, group = Tipo),size = 1)+labs(title="Precio del Inmueble")+
geom_point(aes(color = Tipo))+theme_bw()+scale_x_date(date_breaks = "1 month",labels = date_format("%m-%Y"))
p1<-summ_all %>% filter(Cantidad>500) %>% ggplot(aes(x = Mes, y = Tamaño))+
geom_line(aes(color = Tipo, group = Tipo),size = 1)+labs(title="Tamaño del Inmueble")+
geom_point(aes(color = Tipo))+theme_bw()+ theme(legend.position = "none")+
scale_x_date(date_breaks = "1 month",labels = date_format("%b"))
p2<-summ_all %>% filter(Cantidad>500) %>% ggplot(aes(x = Mes, y = Precio))+
geom_line(aes(color = Tipo, group = Tipo),size = 1)+labs(title="Precio del Inmueble")+
geom_point(aes(color = Tipo))+theme_bw()+ theme(legend.position = "none")+
scale_x_date(date_breaks = "1 month",labels = date_format("%b"))
p3<-summ_all %>% filter(Cantidad>500) %>% ggplot(aes(x = Mes, y = Precio_M2))+
geom_line(aes(color = Tipo, group = Tipo),size = 1)+labs(title="Precio por M² del Inmueble")+
geom_point(aes(color = Tipo))+theme_bw()+scale_x_date(date_breaks = "1 month",labels = date_format("%b"))
library(ggpubr)
ggarrange(p1, p2, p3, ncol=3, nrow=1, common.legend = TRUE, legend="bottom")
library(leaflet)
plot_mardel = function(mardel){
library(leaflet)
library("KernSmooth")
library("raster")
library(data.table)
mardelat = mean(mardel$Latitud, na.rm = T)
mardelong = mean(mardel$Longitud, na.rm = T)
colnames(mardel)[colnames(mardel)=='Latitud']  = 'latitude'
colnames(mardel)[colnames(mardel)=='Longitud']  = 'longitude'
dat <- data.table(mardel)
setnames(dat, tolower(colnames(dat)))
setnames(dat, gsub(" ", "_", colnames(dat)))
dat <- dat[!is.na(longitude)]
## Create kernel density output
kde <- bkde2D(dat[, list(longitude, latitude)],
bandwidth = c(.0045, .0068),
gridsize = c(2500, 2500))
KernelDensityRaster <-
raster(list(
x = kde$x1 ,
y = kde$x2 ,
z = kde$fhat
))
KernelDensityRaster@data@values[which(KernelDensityRaster@data@values < 1)] <-
NA
kernel_density_values <- KernelDensityRaster@data@values
KernelDensityRaster@data@values=log(KernelDensityRaster@data@values,10)
#create pal function for coloring the raster
palRaster <-colorNumeric("Spectral",domain = KernelDensityRaster@data@values,na.color = "transparent")
## Redraw the map
#palRaster <- colorBin("Spectral",domain = KernelDensityRaster@data@values, na.color = "transparent")
palRaster1 <- colorBin("Spectral",domain = 10^KernelDensityRaster@data@values, na.color = "transparent")
leaflet() %>% addTiles() %>%
addLegend(pal = palRaster1,
values = 10^KernelDensityRaster@data@values,
title = "Densidad de Oferta Inmobiliaria") %>%
addRasterImage(KernelDensityRaster,
colors = palRaster,
opacity = .65)
}
gc()
library(leaflet.extras)
library(leaflet.providers)
library(viridisLite)
bajaron_mardel_nov = read_csv('bajaron_mardel_nov.csv')
bajaron_mardel_resto = todos_bajaron %>% filter(Zona == 'Mar del Plata')
bajaron_mardel_nov$Bajo
colnames(bajaron_mardel_nov)[colnames(bajaron_mardel_nov)=='Baños']='Banos'
#bajaron_mardel_nov$Bajo
colnames(bajaron_mardel_nov)[colnames(bajaron_mardel_nov)=='Baños']='Banos'
colnames(bajaron_mardel_nov)[colnames(bajaron_mardel_nov)=='bajaron']='Bajo'
bajaron_mardel_nov$Bajo=bajaron_mardel_nov$Bajo/100
colnames(bajaron_mardel_resto)[colnames(bajaron_mardel_resto)=='WEBS.x']='WEBS'
colnames(bajaron_mardel_resto)[colnames(bajaron_mardel_resto)=='Latitud']  = 'latitude'
colnames(bajaron_mardel_resto)[colnames(bajaron_mardel_resto)=='Longitud']  = 'longitude'
colnames(bajaron_mardel_nov)
bajaron_mardel_nov=bajaron_mardel_nov %>% dplyr::select(c('id','WEBS','Provincia','Tipo_Op','Tipo',
'Zona','Direccion','latitude','longitude','Tiempo',
'Cochera','Prices','Antiguedad','Metros','Metros_Cub','Ambientes','Dormitorio',
'Banos','Declara_Expensas','p.x.m2','Bajo'))
bajaron_mardel_resto=bajaron_mardel_resto %>% dplyr::select(c('id','WEBS','Provincia','Tipo_Op','Tipo',
'Zona','Direccion','latitude','longitude','Tiempo',
'Cochera','Prices','Antiguedad','Metros','Metros_Cub','Ambientes','Dormitorio',
'Banos','Declara_Expensas','p.x.m2','Bajo'))
bajaron_mardel_tds = rbind(bajaron_mardel_nov,bajaron_mardel_resto) %>% distinct(id, .keep_all = T)
bajaron_mardel_tds_c = bajaron_mardel_tds %>% group_by(Tipo) %>%
summarise(
Cantidad = n(),
Precio_M2 = mean(p.x.m2, na.rm = T),
Tamaño = mean(Metros, na.rm = T),
Precio = mean(Prices, na.rm = T),
Bajó = mean(Bajo, na.rm = T)
) %>% arrange(-Cantidad) %>% head(10)
dif_table = (bajaron_mardel_nov_table_c[c('Precio_M2','Tamaño','Precio')]/mardel_table[c('Precio_M2','Tamaño','Precio')]-1)
bajaron_mardel_tds_c
bajaron_mardel_tds_c = bajaron_mardel_tds %>% group_by(Tipo) %>%
summarise(
Cantidad = n(),
Precio_M2 = mean(p.x.m2, na.rm = T),
Tamaño = mean(Metros, na.rm = T),
Precio = mean(Prices, na.rm = T),
Bajó = mean(Bajo, na.rm = T)
) %>% arrange(-Cantidad) %>% head(10)
bajaron_mardel_nov_table1$`var Precio m2`=as.character(percent(bajaron_mardel_nov_table1$`var Precio m2`))
bajaron_mardel_nov_table1 %>% mutate_if(is.numeric, round) #%>% write_csv('bajaron_table.csv')
unique(trimestr1$Mes)
mardel_dec['Mes'] = ymd("2019-12-01")
mardel_nov['Mes'] = ymd("2019-11-01")
mardel_oct['Mes'] = ymd("2019-10-01")
get_df_propplot = function(df, column){
props = c(round((df[column]>250 & df[column]<=1000) %>% mean(na.rm = T)*100),round((df[column]>1000 & df[column]<=1700) %>% mean(na.rm = T)*100),round((df[column]>1700 & df[column]<=2500) %>% mean(na.rm = T)*100),round((df[column]>2500 & df[column]<=3500) %>% mean(na.rm = T)*100),round((df[column]>3500) %>% mean(na.rm = T)*100))
cats = c("200 a 1000",'1000 a 1700','1700 a 2500','2500 a 3500','mas de 3500')
data.frame(Rango_pm2=factor(cats,ordered = T, levels = c("200 a 1000",'1000 a 1700','1700 a 2500','2500 a 3500','mas de 3500')),Proporciones = props, Mes = unique(df$Mes), stringsAsFactors = T)
}
pm2_discr_sum=bind_rows(get_df_propplot(mardel_dec,'p.x.m2'),get_df_propplot(mardel_nov,'p.x.m2'),get_df_propplot(mardel_oct,'p.x.m2'))
ggplot(pm2_discr_sum, aes(x = Mes, y = Proporciones, fill = Rango_pm2)) +
geom_col() +
geom_text(aes(label = paste0(Proporciones, "%")),
position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set2") +
theme_minimal(base_size = 16) +
ylab("Percentage") +
xlab(NULL)
pm2_discr_sum_plot = ggplot(pm2_discr_sum, aes(x = Mes, y = Proporciones, fill = Rango_pm2)) +
geom_col() +
geom_text(aes(label = paste0(Proporciones, "%")),
position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set2") +
theme_minimal(base_size = 16) +
ylab("Percentage") +
xlab(NULL)
## Con estos datos, hacer la proporcion de cada  TIPO
summ_oct['Proporcion'] = round(summ_oct['Cantidad']/sum(summ_oct['Cantidad'])*100)
summ_oct['Mes']='Octubre'
summ_nov['Proporcion'] = round(summ_nov['Cantidad']/sum(summ_nov['Cantidad'])*100)
summ_nov['Mes']='Noviembre'
summ_dec['Proporcion'] = round(summ_dec['Cantidad']/sum(summ_dec['Cantidad'])*100)
summ_dec['Mes']='Diciembre'
tipo_discr_sum = rbind(summ_oct, summ_nov,summ_dec)
ggplot(tipo_discr_sum, aes(x = Mes, y = Proporcion, fill = Tipo)) +
geom_col() +
geom_text(aes(label = paste0(Proporcion, "%")),
position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set2") +
theme_minimal(base_size = 16) +
ylab("Percentage") +
xlab(NULL)
tipo_plot = ggplot(tipo_discr_sum, aes(x = Mes, y = Proporcion, fill = Tipo)) +
geom_col() +
geom_text(aes(label = paste0(Proporcion, "%")),
position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set2") +
theme_minimal(base_size = 16) +
ylab("Percentage") +
xlab(NULL)
inm_data = mardel_dec %>% group_by(Inmobiliaria) %>% summarise(
Cantidad.De.Publicaciones=n(),
Proporcion = round(Cantidad.De.Publicaciones/nrow(mardel_dec)*100)
) %>% arrange(-Cantidad.De.Publicaciones)
library(arules)
intervals_inmo = discretize(inm_data$Cantidad.De.Publicaciones, breaks = 5, method ='cluster')
intervals_inmo=as_tibble(intervals_inmo) %>% group_by(value) %>%
summarise(
n = n(),
Proporcion = round(n/length(intervals_inmo)*100)
)
intervals_inmo$value = c("1 a 22","23 a 69", "70 a 141","142 a 276","276 a 419")
pie_chart_df_ex <- data.frame(Category = factor(intervals_inmo$value, ordered = T,levels = c("1 a 22","23 a 69", "70 a 141","142 a 276","276 a 419")), "freq" = intervals_inmo$Proporcion)
pie_inmobiliaria = ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = Category)) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.65),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Publicaciones por Inmobiliaria") +
coord_polar("y")
pie_inmobiliaria
knitr::opts_chunk$set(echo = TRUE)
bajaron_table = read_csv('bajaron_table.csv')
#kable(bajaron_table, caption = "Bajaron de Precio")
source('informe_data.R')
pie_inmobiliaria
pie_inmobiliaria = ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = Category)) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.75),
position = position_stack(vjust = 0.5)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Publicaciones por Inmobiliaria") +
coord_polar("y")
pie_inmobiliaria
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = Category)) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.75),
position = position_stack(vjust = 0.7)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Publicaciones por Inmobiliaria") +
coord_polar("y")
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = Category)) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.75),
position = position_stack(vjust = 1)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Publicaciones por Inmobiliaria") +
coord_polar("y")
ggplot(pie_chart_df_ex, aes (x="", y = freq, fill = Category)) +
geom_col(position = 'stack', width = 1) +
geom_text(aes(label = paste(round(freq / sum(freq) * 100, 1), "%"), x = 1.75),
position = position_stack(vjust = 0.9)) +
theme_classic() +
theme(plot.title = element_text(hjust=0.5),
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(fill = "Publicaciones",
x = NULL,
y = NULL,
title = "Publicaciones por Inmobiliaria") +
coord_polar("y")
